<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1"><dataflow id="2b335ad7-af27-446e-9bc5-5e293bdae931" role="top">
<name>SNPAnnotationWorkflow</name>
<inputPorts><port>
<name>id</name>
<depth>2</depth>
<granularDepth>2</granularDepth>
</port>
</inputPorts>
<outputPorts>
<port>
<name>gene_id</name>
</port>
<port>
<name>gene_description</name>
</port>
<port>
<name>gene_name</name>
</port>
<port>
<name>gene_summary</name>
</port>
<port>
<name>gene_synonyms</name>
</port>
<port>
<name>publication_author</name>
</port>
<port>
<name>publication_pubmed_id</name>
</port>
<port>
<name>publication_abstract</name>
</port>
<port>
<name>publication_title</name>
</port>
<port>
<name>publication_journal_name</name>
</port>
<port>
<name>KEGG_pathway</name>
</port>
<port><name>keggID</name>
</port>
</outputPorts>
<processors><processor><name>entrez_gene_list_flatter2</name><inputPorts><port><name>inputlist</name><depth>2</depth></port></inputPorts><outputPorts><port><name>outputlist</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="inputlist" to="inputlist" /></inputMap><outputMap><map from="outputlist" to="outputlist" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">
  <script>flatten(inputs, outputs, depth) {
	for (i = inputs.iterator(); i.hasNext();) {
	    element = i.next();
		if (element instanceof Collection &amp;&amp; depth &gt; 0) {
			flatten(element, outputs, depth - 1);
		} else {
			outputs.add(element);
		}
	}
}

outputlist = new ArrayList();

flatten(inputlist, outputlist, 1);</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>[B</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>inputlist</name>
      <depth>2</depth>
      <mimeTypes>
        <string>l(l(''))</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>1</granularDepth>
      <name>outputlist</name>
      <depth>1</depth>
      <mimeTypes>
        <string>l('')</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="inputlist" depth="2" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Entrez_NS</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>EntrezGene_EntrezGeneID</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>Remove_duplicate_strings</name><inputPorts><port><name>stringlist</name><depth>1</depth></port></inputPorts><outputPorts><port><name>strippedlist</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="stringlist" to="stringlist" /></inputMap><outputMap><map from="strippedlist" to="strippedlist" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">
  <script>List strippedlist = new ArrayList();
for (Iterator i = stringlist.iterator(); i.hasNext();) {
	String item = (String) i.next();
	if (strippedlist.contains(item) == false) {
		strippedlist.add(item);
	}
}
</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>stringlist</name>
      <depth>1</depth>
      <mimeTypes>
        <string>l('text/plain')</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>1</granularDepth>
      <name>strippedlist</name>
      <depth>1</depth>
      <mimeTypes>
        <string>l('text/plain')</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="stringlist" depth="1" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getKeggPathwaysByKeggID</name><inputPorts><port><name>Object(keggID)</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Object(Collection - 'pathways' As Simples)</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>Object(Collection - 'pathways')</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>output</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>biomoby-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.biomoby.BiomobyActivity</class><inputMap><map from="Object(keggID)" to="Object(keggID)" /></inputMap><outputMap><map from="Object(Collection - 'pathways' As Simples)" to="Object(Collection - 'pathways' As Simples)" /><map from="output" to="output" /><map from="Object(Collection - 'pathways')" to="Object(Collection - 'pathways')" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.biomoby.BiomobyActivityConfigurationBean xmlns="">
  <mobyEndpoint>http://moby.ucalgary.ca/moby/MOBY-Central.pl</mobyEndpoint>
  <serviceName>getKeggPathwaysByKeggID</serviceName>
  <authorityName>bioinfo.icapture.ubc.ca</authorityName>
  <secondaries />
</net.sf.taverna.t2.activities.biomoby.BiomobyActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Object(keggID)" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getGeneInformationByEntrezGeneID</name><inputPorts><port><name>Object(geneid)</name><depth>0</depth></port></inputPorts><outputPorts><port><name>gene_ref(gene_info)</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>biomoby-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.biomoby.BiomobyActivity</class><inputMap><map from="Object(geneid)" to="Object(geneid)" /></inputMap><outputMap><map from="gene_ref(gene_info)" to="gene_ref(gene_info)" /><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.biomoby.BiomobyActivityConfigurationBean xmlns="">
  <mobyEndpoint>http://moby.ucalgary.ca/moby/MOBY-Central.pl</mobyEndpoint>
  <serviceName>getGeneInformationByEntrezGeneID</serviceName>
  <authorityName>bioinfo.icapture.ubc.ca</authorityName>
  <secondaries />
</net.sf.taverna.t2.activities.biomoby.BiomobyActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>3</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Object(geneid)" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Parse_KEGG_pathways</name><inputPorts><port><name>mobyData('Object')</name><depth>0</depth></port></inputPorts><outputPorts><port><name>namespace</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>id</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>biomoby-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.biomoby.MobyParseDatatypeActivity</class><inputMap><map from="mobyData('Object')" to="mobyData('Object')" /></inputMap><outputMap><map from="id" to="id" /><map from="namespace" to="namespace" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.biomoby.MobyParseDatatypeActivityConfigurationBean xmlns="">
  <datatypeName>Object</datatypeName>
  <registryEndpoint>http://moby.ucalgary.ca/moby/MOBY-Central.pl</registryEndpoint>
  <articleNameUsedByService>pathways</articleNameUsedByService>
</net.sf.taverna.t2.activities.biomoby.MobyParseDatatypeActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="mobyData('Object')" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Gene2PubMed</name><inputPorts><port><name>Object(geneid)</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Publication(Collection - 'publications' As Simples)</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>Publication(Collection - 'publications')</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>output</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>biomoby-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.biomoby.BiomobyActivity</class><inputMap><map from="Object(geneid)" to="Object(geneid)" /></inputMap><outputMap><map from="Publication(Collection - 'publications' As Simples)" to="Publication(Collection - 'publications' As Simples)" /><map from="output" to="output" /><map from="Publication(Collection - 'publications')" to="Publication(Collection - 'publications')" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.biomoby.BiomobyActivityConfigurationBean xmlns="">
  <mobyEndpoint>http://moby.ucalgary.ca/moby/MOBY-Central.pl</mobyEndpoint>
  <serviceName>Gene2PubMed</serviceName>
  <authorityName>icapture.ubc.ca</authorityName>
  <secondaries>
    <entry>
      <string>maxResults</string>
      <string>20</string>
    </entry>
  </secondaries>
</net.sf.taverna.t2.activities.biomoby.BiomobyActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>3</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Object(geneid)" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Parse_Moby_Data_Publication</name><inputPorts><port><name>mobyData('Publication')</name><depth>0</depth></port></inputPorts><outputPorts><port><name>publications_'Year'_id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Title'</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Journal'_ns</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Author'</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Journal'</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>namespace</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Author'_ns</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Year'</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Abstract'_ns</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Abstract'</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Journal'_id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Abstract'_id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Author'_id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Year'_ns</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Title'_id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>publications_'Title'_ns</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>biomoby-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.biomoby.MobyParseDatatypeActivity</class><inputMap><map from="mobyData('Publication')" to="mobyData('Publication')" /></inputMap><outputMap><map from="publications_'Abstract'_id" to="publications_'Abstract'_id" /><map from="publications_'Year'_id" to="publications_'Year'_id" /><map from="publications_'Author'_id" to="publications_'Author'_id" /><map from="publications_'Journal'_ns" to="publications_'Journal'_ns" /><map from="publications_'Journal'_id" to="publications_'Journal'_id" /><map from="publications_'Abstract'" to="publications_'Abstract'" /><map from="publications_'Year'_ns" to="publications_'Year'_ns" /><map from="namespace" to="namespace" /><map from="id" to="id" /><map from="publications_'Abstract'_ns" to="publications_'Abstract'_ns" /><map from="publications_'Title'_ns" to="publications_'Title'_ns" /><map from="publications_'Title'_id" to="publications_'Title'_id" /><map from="publications_'Author'" to="publications_'Author'" /><map from="publications_'Author'_ns" to="publications_'Author'_ns" /><map from="publications_'Year'" to="publications_'Year'" /><map from="publications_'Journal'" to="publications_'Journal'" /><map from="publications_'Title'" to="publications_'Title'" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.biomoby.MobyParseDatatypeActivityConfigurationBean xmlns="">
  <datatypeName>Publication</datatypeName>
  <registryEndpoint>http://moby.ucalgary.ca/moby/MOBY-Central.pl</registryEndpoint>
  <articleNameUsedByService>publications</articleNameUsedByService>
</net.sf.taverna.t2.activities.biomoby.MobyParseDatatypeActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="mobyData('Publication')" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>convertIdentifier2KeggID</name><inputPorts><port><name>Object(identifier)</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>Object(keggID)</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>biomoby-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.biomoby.BiomobyActivity</class><inputMap><map from="Object(identifier)" to="Object(identifier)" /></inputMap><outputMap><map from="output" to="output" /><map from="Object(keggID)" to="Object(keggID)" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.biomoby.BiomobyActivityConfigurationBean xmlns="">
  <mobyEndpoint>http://moby.ucalgary.ca/moby/MOBY-Central.pl</mobyEndpoint>
  <serviceName>convertIdentifier2KeggID</serviceName>
  <authorityName>bioinfo.icapture.ubc.ca</authorityName>
  <secondaries />
</net.sf.taverna.t2.activities.biomoby.BiomobyActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Object(identifier)" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Parse_Moby_Data_gene_ref</name><inputPorts><port><name>mobyData('gene_ref')</name><depth>0</depth></port></inputPorts><outputPorts><port><name>gene_info_'name'_id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'description'_id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'synonyms'_id</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'description'</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'name'_ns</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'description'_ns</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'synonyms'_ns</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'summary'_ns</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'summary'</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'name'</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>namespace</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'synonyms'</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>gene_info_'summary'_id</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>biomoby-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.biomoby.MobyParseDatatypeActivity</class><inputMap><map from="mobyData('gene_ref')" to="mobyData('gene_ref')" /></inputMap><outputMap><map from="gene_info_'summary'" to="gene_info_'summary'" /><map from="gene_info_'description'_id" to="gene_info_'description'_id" /><map from="gene_info_'synonyms'_ns" to="gene_info_'synonyms'_ns" /><map from="gene_info_'description'_ns" to="gene_info_'description'_ns" /><map from="gene_info_'name'" to="gene_info_'name'" /><map from="namespace" to="namespace" /><map from="id" to="id" /><map from="gene_info_'summary'_ns" to="gene_info_'summary'_ns" /><map from="gene_info_'synonyms'" to="gene_info_'synonyms'" /><map from="gene_info_'name'_id" to="gene_info_'name'_id" /><map from="gene_info_'description'" to="gene_info_'description'" /><map from="gene_info_'name'_ns" to="gene_info_'name'_ns" /><map from="gene_info_'summary'_id" to="gene_info_'summary'_id" /><map from="gene_info_'synonyms'_id" to="gene_info_'synonyms'_id" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.biomoby.MobyParseDatatypeActivityConfigurationBean xmlns="">
  <datatypeName>gene_ref</datatypeName>
  <registryEndpoint>http://moby.ucalgary.ca/moby/MOBY-Central.pl</registryEndpoint>
  <articleNameUsedByService>gene_info</articleNameUsedByService>
</net.sf.taverna.t2.activities.biomoby.MobyParseDatatypeActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="mobyData('gene_ref')" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>CreateEntrezGeneDataType</name><inputPorts><port><name>namespace</name><depth>0</depth></port><port><name>id</name><depth>0</depth></port></inputPorts><outputPorts><port><name>mobyData</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>biomoby-activity</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.activities.biomoby.BiomobyObjectActivity</class><inputMap><map from="id" to="id" /><map from="namespace" to="namespace" /></inputMap><outputMap><map from="mobyData" to="mobyData" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.biomoby.BiomobyObjectActivityConfigurationBean xmlns="">
  <mobyEndpoint>http://moby.ucalgary.ca/moby/MOBY-Central.pl</mobyEndpoint>
  <serviceName>Object</serviceName>
  <authorityName />
</net.sf.taverna.t2.activities.biomoby.BiomobyObjectActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2</group><artifact>workflowmodel-impl</artifact><version>0.4</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="namespace" depth="0" /><port name="id" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>entrez_gene_list_flatter2</processor><port>inputlist</port></sink><source type="dataflow"><port>id</port></source></datalink><datalink><sink type="processor"><processor>Remove_duplicate_strings</processor><port>stringlist</port></sink><source type="processor"><processor>entrez_gene_list_flatter2</processor><port>outputlist</port></source></datalink><datalink><sink type="processor"><processor>getKeggPathwaysByKeggID</processor><port>Object(keggID)</port></sink><source type="processor"><processor>convertIdentifier2KeggID</processor><port>Object(keggID)</port></source></datalink><datalink><sink type="processor"><processor>getGeneInformationByEntrezGeneID</processor><port>Object(geneid)</port></sink><source type="processor"><processor>CreateEntrezGeneDataType</processor><port>mobyData</port></source></datalink><datalink><sink type="processor"><processor>Parse_KEGG_pathways</processor><port>mobyData('Object')</port></sink><source type="processor"><processor>getKeggPathwaysByKeggID</processor><port>Object(Collection - 'pathways' As Simples)</port></source></datalink><datalink><sink type="processor"><processor>Gene2PubMed</processor><port>Object(geneid)</port></sink><source type="processor"><processor>CreateEntrezGeneDataType</processor><port>mobyData</port></source></datalink><datalink><sink type="processor"><processor>Parse_Moby_Data_Publication</processor><port>mobyData('Publication')</port></sink><source type="processor"><processor>Gene2PubMed</processor><port>Publication(Collection - 'publications' As Simples)</port></source></datalink><datalink><sink type="processor"><processor>convertIdentifier2KeggID</processor><port>Object(identifier)</port></sink><source type="processor"><processor>CreateEntrezGeneDataType</processor><port>mobyData</port></source></datalink><datalink><sink type="processor"><processor>Parse_Moby_Data_gene_ref</processor><port>mobyData('gene_ref')</port></sink><source type="processor"><processor>getGeneInformationByEntrezGeneID</processor><port>gene_ref(gene_info)</port></source></datalink><datalink><sink type="processor"><processor>CreateEntrezGeneDataType</processor><port>namespace</port></sink><source type="processor"><processor>Entrez_NS</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>CreateEntrezGeneDataType</processor><port>id</port></sink><source type="processor"><processor>Remove_duplicate_strings</processor><port>strippedlist</port></source></datalink><datalink><sink type="dataflow"><port>gene_id</port></sink><source type="processor"><processor>Parse_Moby_Data_gene_ref</processor><port>id</port></source></datalink><datalink><sink type="dataflow"><port>gene_description</port></sink><source type="processor"><processor>Parse_Moby_Data_gene_ref</processor><port>gene_info_'description'</port></source></datalink><datalink><sink type="dataflow"><port>gene_name</port></sink><source type="processor"><processor>Parse_Moby_Data_gene_ref</processor><port>gene_info_'name'</port></source></datalink><datalink><sink type="dataflow"><port>gene_summary</port></sink><source type="processor"><processor>Parse_Moby_Data_gene_ref</processor><port>gene_info_'summary'</port></source></datalink><datalink><sink type="dataflow"><port>gene_synonyms</port></sink><source type="processor"><processor>Parse_Moby_Data_gene_ref</processor><port>gene_info_'synonyms'</port></source></datalink><datalink><sink type="dataflow"><port>publication_author</port></sink><source type="processor"><processor>Parse_Moby_Data_Publication</processor><port>publications_'Author'</port></source></datalink><datalink><sink type="dataflow"><port>publication_pubmed_id</port></sink><source type="processor"><processor>Parse_Moby_Data_Publication</processor><port>id</port></source></datalink><datalink><sink type="dataflow"><port>publication_abstract</port></sink><source type="processor"><processor>Parse_Moby_Data_Publication</processor><port>publications_'Abstract'</port></source></datalink><datalink><sink type="dataflow"><port>publication_title</port></sink><source type="processor"><processor>Parse_Moby_Data_Publication</processor><port>publications_'Title'</port></source></datalink><datalink><sink type="dataflow"><port>publication_journal_name</port></sink><source type="processor"><processor>Parse_Moby_Data_Publication</processor><port>publications_'Journal'</port></source></datalink><datalink><sink type="dataflow"><port>KEGG_pathway</port></sink><source type="processor"><processor>Parse_KEGG_pathways</processor><port>id</port></source></datalink><datalink><sink type="dataflow"><port>keggID</port></sink><source type="processor"><processor>convertIdentifier2KeggID</processor><port>Object(keggID)</port></source></datalink></datalinks><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>Georgina Moulton</text>
      </annotationBean>
      <date>2009-02-10 14:04:05.337 GMT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text>SNP Annotation Workflow</text>
      </annotationBean>
      <date>2009-02-10 14:04:05.337 GMT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>This workflow takes an rs number and retrieves all relevant annotation for the SNP including gene, protein information and literature.

DataBiNS (Data Mining Workflow for Biological Pathways and Non-Synonymous SNPs) is a workflow that takes an identifier (list of gene ids, or list of KEGG pathway ids) and proceeds to mine for Single Nucleotide Polymorphism (SNP) data that is associated with the identifiers.

This particular version of DataBiNS can take in a KEGG pathway.  An example KEGG pathway is hsa00030.  The version of DataBiNS that works with single unqiue identifiers can be found as a separate version of the DataBiNS workflow under myExperiment.</text>
      </annotationBean>
      <date>2009-02-10 14:04:05.337 GMT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></dataflow></workflow>